Program link:
https://www.hackerrank.com/contests/w32/challenges/duplication/problem
Program:
Consider a binary string, , with an initial value of . We expand  by performing the following steps:

Create a string, , where each character  is equal to . For example, if , then . Note that  and  always have the same length because  is the complement of .
Append  to the end of  so that . In the example above,  becomes .
We keep on expanding  using steps  and  until the length of  exceeds .
When we repeat the expansion operation, string  grows like this:

Given  queries in the form of a zero-based index, , solve each query by printing the character at index  in  on a new line.

Input Format

The first line contains an integer denoting  (number of queries). 
Each of the  subsequent lines contains an integer describing the value of  for a query.

Constraints

Output Format

For each query, print the value of  (i.e., either  or ) on a new line.

Sample Input 0

3
2
5
7
Sample Output 0

1
0
1
Explanation 0

First, we build string . Next, we answer the following sequence of  queries:

For ,  so we print  on a new line.
For ,  so we print  on a new line.
For ,  so we print  on a new line.
COde:
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
static boolean loaded=true; 
        static String data = "0"; 
    static char duplication(int x){
        
         if(loaded){ 
             String compli= new String();
             for(int i=0;i<10;i++){ 
                 for (int j = 0; j < data.length(); j++) { 
                     switch (data.charAt(j)) { 
                            case '0': compli +=1;
                                break; 
                         case '1': compli +=0;
                                    break; 
                     } 
                 } 
                 data=data+compli; compli=""; 
            } 
             loaded=false; 
         } 
        return data.charAt(x);
        
    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int q = in.nextInt();
        for(int a0 = 0; a0 < q; a0++){
            int x = in.nextInt();
            char result = duplication(x);
            System.out.println(result);
        }
    }
}
